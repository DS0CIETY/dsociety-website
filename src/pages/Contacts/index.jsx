import { useState } from 'react';
import botData from '../../private/bot.json';
import './index.css';
import { Modal } from '../../components/Modal';

export const Contacts = () => {
  const [userName, setUserName] = useState(false);
  const [userPhone, setUserPhone] = useState(false);
  const [userEmail, setUserEmail] = useState(false);
  const [userMessage, setUserMessage] = useState(false);
  const [modalTitle, setModalTitle] = useState('');
  const [modalIsVisible, setModalIsVisible] = useState(false);

  return (
    <section className="Contacts">
      <h2 className="Contacts__title">–ù–ê–®–ï –°–û–û–ë–©–ï–°–¢–í–û</h2>
      <p className="Contacts__description">
        –•–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å? –ï—Å—Ç—å –Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–¥–µ–∏ –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –Ω–∞—à—É –∂–∏–∑–Ω—å –∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ? –ù–µ —Ö–æ—Ç–∏—Ç–µ –±—ã—Ç—å
        –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–º? –¢–æ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞–º. –í–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å. –û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —Ñ–æ—Ä–º–µ
        –Ω–∏–∂–µ.
      </p>

      <div className="Contacts__form-wrapper">
        <form className="Contacts__form" method="post">
          <input
            className="Contacts__form-input unimportant"
            onChange={(event) => setUserPhone(event.target.value)}
            type="text"
            placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
          />
          <input
            className="Contacts__form-input unimportant"
            onChange={(event) => setUserEmail(event.target.value)}
            type="text"
            placeholder="Email"
          />
          <input
            className="Contacts__form-input"
            onChange={(event) => setUserName(event.target.value)}
            type="text"
            placeholder="Telegram username *"
            required
          />
          <textarea
            className="Contacts__form-textarea"
            onChange={(event) => setUserMessage(event.target.value)}
            type="text"
            placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ *"
            required
          />
          <button className="Contacts__form-btn-submit" type="submit" onClick={(event) => sendForm(event)}>
            –û–¢–ü–†–ê–í–ò–¢–¨
          </button>
        </form>
      </div>

      <Modal isVisible={modalIsVisible} onClose={closeModal} title={modalTitle} />
    </section>
  );

  function sendForm(event) {
    event.preventDefault();

    const savedUsername = window.localStorage.getItem('username');

    if (savedUsername) {
      setModalTitle('You sended request already');
      setModalIsVisible(true);
    } else if (userName && userMessage && userName[0] === '@' && userName.length > 1) {
      const requestText = `<b>ü§ñ User:</b> ${userName} phone: ${userPhone && userPhone} email: ${
        userEmail && userEmail
      } ‚ûú <b>üí¨ Message:</b> ${userMessage}`;
      const botRequest = `https://api.telegram.org/bot${botData.token}/sendMessage?chat_id=${botData.chatId}&parse_mode=html&text=${requestText}`;

      fetch(botRequest, {
        method: 'POST',
      })
        .then(() => {
          setModalTitle('Request successfully sended');
          setModalIsVisible(true);
          window.localStorage.setItem('username', userName);
        })
        .catch(() => {
          setModalTitle('Something wrong. Try again');
          setModalIsVisible(true);
        });
    } else {
      setModalTitle('Wrong data');
      setModalIsVisible(true);
    }
  }

  function closeModal() {
    setModalIsVisible(false);
  }
};
